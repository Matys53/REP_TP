# This is a basic workflow to help you get started with Actions

name: Test Workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Étape 2 : Configurer Java (version 17 ici)
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Utiliser la distribution OpenJDK
          java-version: '17'

      # Étape 3 : Construire le projet Java avec Maven
      - name: Build project with Maven
        run: mvn clean package  # Génère le .jar dans target/
          
      # Étape 4 : Construire l'image Docker
      - name: Build Docker image
        run: docker build -t image .

      # Étape 5 : Exécuter le conteneur Docker
      - name: Run Docker container
        run: docker run image > answer_associativity.txt

      - name: Upload answer associativity
        uses: actions/upload-artifact@v4
        with:
          name: answer associativity
          path: answer_associativity.txt
